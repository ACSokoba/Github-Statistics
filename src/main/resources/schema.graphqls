type Link {
  url: String!
  description: String!
}

type Node {
  name: String
  description: String
  primaryLanguage: String
}

type Nodes {
  nodes: [Node]
}

type Repository {
  node: Nodes
  totalCount: Int
}

type User {
  login: String!
  name: String
  repositories: Repository
}

type Company {
  companyName: String!
  numberOfMembers: Int
  numberOfRepositories: Int
  avarageCommitCount: Int
  totalRepositoriesDiskUsage: Int
}

type Language {
	name: String!
	languageFrequency: Int!
}

type Query {
  allLinks: [Link]
  allUsers: [User]
  someCompaniesData: [Company]
  someRepositories: [Node]
  allRepositoryCount: Int
  allUsersCount: Int
  allOpenIssueCount: Int
  allClosedIssueCount: Int
  someLanguages: [Language]
  allRepoPerYear: [Language]
}

type Mutation {
  createLink(url: String!, description: String!): Link
}

schema {
  query: Query
  mutation : Mutation
}
